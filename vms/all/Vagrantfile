# Vagrantfile
Vagrant.configure("2") do |config|
  # Configuration générale
  config.vm.box = "ubuntu/focal64" # Ubuntu 20.04 LTS

  # VM 1: Backend (Java Spring Boot)
  config.vm.define "backend" do |backend|
    backend.vm.hostname = "backend"
    backend.vm.network "private_network", ip: "192.168.56.101"
    backend.vm.provider "virtualbox" do |vb|
      vb.memory = "4096"
      vb.cpus = 2
    end
    backend.vm.provision "shell", inline: <<-SHELL
      apt update && apt install -y openjdk-11-jdk maven
    SHELL
  end

  # VM 2: Frontend (Angular)
  config.vm.define "frontend" do |frontend|
    frontend.vm.hostname = "frontend"
    frontend.vm.network "private_network", ip: "192.168.56.102"
    frontend.vm.provider "virtualbox" do |vb|
      vb.memory = "2048"
      vb.cpus = 2
    end
    frontend.vm.provision "shell", inline: <<-SHELL
      apt update && apt install -y nodejs npm
      npm install -g @angular/cli
    SHELL
  end

  # VM 3: PostgreSQL
  config.vm.define "postgresql" do |postgresql|
    postgresql.vm.hostname = "postgresql"
    postgresql.vm.network "private_network", ip: "192.168.56.103"
    postgresql.vm.provider "virtualbox" do |vb|
      vb.memory = "4096"
      vb.cpus = 2
    end
    postgresql.vm.provision "shell", inline: <<-SHELL
      apt update && apt install -y postgresql postgresql-contrib
      systemctl enable postgresql
      sudo -u postgres psql -c "CREATE USER spring_user WITH PASSWORD 'spring_password';"
      sudo -u postgres psql -c "CREATE DATABASE spring_db OWNER spring_user;"
      sudo -u postgres psql -c "GRANT ALL PRIVILEGES ON DATABASE spring_db TO spring_user;"
    SHELL
  end

  # VM 4: Redis
  config.vm.define "redis" do |redis|
    redis.vm.hostname = "redis"
    redis.vm.network "private_network", ip: "192.168.56.104"
    redis.vm.provider "virtualbox" do |vb|
      vb.memory = "2048"
      vb.cpus = 1
    end
    redis.vm.provision "shell", inline: <<-SHELL
      apt update && apt install -y redis-server
      sed -i 's/^# requirepass .*/requirepass "redis_password"/' /etc/redis/redis.conf
      systemctl restart redis
    SHELL
  end

  # VM 5: GitLab CE
  config.vm.define "gitlab" do |gitlab|
    gitlab.vm.hostname = "gitlab"
    gitlab.vm.network "private_network", ip: "192.168.56.105"
    gitlab.vm.provider "virtualbox" do |vb|
      vb.memory = "8192"
      vb.cpus = 4
    end
    gitlab.vm.provision "shell", inline: <<-SHELL
      apt update && apt install -y curl openssh-server ca-certificates tzdata perl
      curl https://packages.gitlab.com/install/repositories/gitlab/gitlab-ce/script.deb.sh | bash
      EXTERNAL_URL="http://192.168.56.105" apt install -y gitlab-ce
    SHELL
  end

  # VM 6: Nexus
  config.vm.define "nexus" do |nexus|
    nexus.vm.hostname = "nexus"
    nexus.vm.network "private_network", ip: "192.168.56.106"
    nexus.vm.provider "virtualbox" do |vb|
      vb.memory = "4096"
      vb.cpus = 2
    end
    nexus.vm.provision "shell", inline: <<-SHELL
      apt update && apt install -y openjdk-11-jdk
      wget https://download.sonatype.com/nexus/3/latest-unix.tar.gz
      tar -xvf latest-unix.tar.gz -C /opt
      mv /opt/nexus-* /opt/nexus
      useradd -r -m -d /opt/nexus -s /bin/bash nexus
      chown -R nexus:nexus /opt/nexus
      echo 'run_as_user="nexus"' > /opt/nexus/bin/nexus.rc
      /opt/nexus/bin/nexus start
    SHELL
  end
end
